{"version":3,"file":"static/js/714.1ae74cb0.chunk.js","mappings":"+YAGaA,EAAgBC,EAAAA,EAAAA,IAAH,wYAoBbC,EAAQD,EAAAA,EAAAA,GAAH,4LAULE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2tBAiCLI,EAAeJ,EAAAA,EAAAA,KAAH,wOAeZK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4aAyBLO,EAASP,EAAAA,EAAAA,OAAH,kgCAsDNQ,EAASR,EAAAA,EAAAA,IAAH,4LAgBNS,EAAaT,EAAAA,EAAAA,EAAH,kH,gKC3JjBU,EAAe,kBACnBC,EAAAA,KAAaC,MAAM,CACjBC,MAAOF,EAAAA,KAEJG,SAFI,YAGJD,MAHI,uBAIJE,OACHC,SAAUL,EAAAA,KAEPG,SAFO,YAGPG,IAAI,EAHG,8CAIPC,IAAI,GAJG,8CAKPH,QAZc,EA2ErB,EA5DkB,WAChB,IAAMI,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,WACnBD,GAAaD,EACd,EACD,OACE,+BAEE,SAAC,KAAD,WACE,SAAC,KAAD,CACEG,iBAAkBf,EAClBgB,cAAe,CACbb,MAAO,GACPG,SAAU,IAEZW,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,WAfV,SAAAD,GACjBT,GAASW,EAAAA,EAAAA,IAAOF,GAAS,CAejBG,CAAW,CAACH,OAAAA,IACZC,GACD,EATH,SAWG,gBAAGG,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,4BACE,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAE5CJ,EAAOnB,OAASoB,EAAQpB,OACvB,SAAC,KAAD,UAASmB,EAAOnB,QACd,SAEN,4BACE,SAAC,KAAD,CACEqB,KAAK,WACLC,KAAMb,EAAW,OAAS,WAC1Bc,YAAY,cAEd,SAAC,KAAD,CAAcC,QAASb,EAAvB,SACIF,GAA8B,SAAC,MAAD,KAAnB,SAAC,MAAD,MAEdU,EAAOhB,UAAYiB,EAAQjB,UAC1B,SAAC,KAAD,UAASgB,EAAOhB,WACd,SAGN,SAAC,KAAD,CAAQmB,KAAK,SAAb,oBAEA,4BACE,qDAAoC,KACpC,SAAC,KAAD,CAAYG,GAAG,YAAf,2BA5BL,OAoCV,ECtFD,EAPmB,WACjB,OACF,+BACI,SAAC,EAAD,KAGH,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (min-width: 768px) {\n\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: #fff;\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54ADFF;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid #54ADFF;\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  };\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\n\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54ADFF;\n  border: 1px solid #54ADFF;\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\n\n\n\n\nexport const StyledLink = styled.a`\n  color: #54ADFF;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import { useState } from 'react';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\n\n\nimport { signIn } from 'redux/auth/authOperations';\n\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ShowPassword,\n  StyledLink,\n} from './LoginForm.styled';\n\nconst SignupSchema = () =>\n  yup.object().shape({\n    email: yup\n      .string()\n      .required(`Required`)\n      .email(`Enter a valid Email`)\n      .trim(),\n    password: yup\n      .string()\n      .required(`Required`)\n      .min(7, `Password should be from 7 to 32 characters`)\n      .max(32, `Password should be from 7 to 32 characters`)\n      .trim(),\n  });\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPass, setShowPass] = useState(false);\n  const formSubmit = values => {\n    dispatch(signIn(values))};\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  return (\n    <>\n\n      <FormContainer>\n        <Formik\n          validationSchema={SignupSchema}\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          onSubmit={(values, { resetForm }) => {\n            formSubmit({values});\n            resetForm();\n          }}\n        >\n          {({ errors, touched }) => (\n            <Forma>\n              <Title>Login</Title>\n              <div>\n                <Input name=\"email\" type=\"email\" placeholder=\"Email\" />\n\n                {errors.email && touched.email ? (\n                  <ErrBox>{errors.email}</ErrBox>\n                ) : null}\n              </div>\n              <div>\n                <Input\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {errors.password && touched.password ? (\n                  <ErrBox>{errors.password}</ErrBox>\n                ) : null}\n              </div>\n\n              <Button type=\"submit\">Login</Button>\n\n              <div>\n                <span>Don't have an account?</span>{' '}\n                <StyledLink to=\"/register\">Register</StyledLink>\n              </div>\n            </Forma>\n          )}\n        </Formik>\n      </FormContainer>\n    </>\n  );\n};\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst  LoginPage = () => {\n  return (\n<>\n    <LoginForm />\n</>\n  );\n};\nexport default LoginPage;\n\n"],"names":["FormContainer","styled","Title","Forma","Form","ShowPassword","Input","Field","Button","ErrBox","StyledLink","SignupSchema","yup","shape","email","required","trim","password","min","max","dispatch","useDispatch","useState","showPass","setShowPass","showPassword","validationSchema","initialValues","onSubmit","values","resetForm","signIn","formSubmit","errors","touched","name","type","placeholder","onClick","to"],"sourceRoot":""}