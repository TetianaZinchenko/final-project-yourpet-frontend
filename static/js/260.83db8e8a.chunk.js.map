{"version":3,"file":"static/js/260.83db8e8a.chunk.js","mappings":"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","sources":["webpack://final-project-yourpet-frontend/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","components/OurFriends/OurFriends.styled.jsx","components/OurFriends/FriendsItem/FriendsItem.styled.jsx","components/OurFriends/FriendsItem/WorkTimePopup.jsx","components/OurFriends/FriendsItem/FriendsItem.jsx","components/OurFriends/OurFriends.jsx","redux/friends/friendsSelectors.jsx","pages/OurFriendsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wheelAndHamster\":\"Loader_wheelAndHamster__4xCRk\",\"wheel\":\"Loader_wheel__RN-g4\",\"hamster\":\"Loader_hamster__GERvC\",\"spoke\":\"Loader_spoke__QiUdl\",\"hamsterHead\":\"Loader_hamsterHead__PAmQJ\",\"hamsterEar\":\"Loader_hamsterEar__LlzzS\",\"hamsterEye\":\"Loader_hamsterEye__F4Vo9\",\"hamsterNose\":\"Loader_hamsterNose__Jhaky\",\"hamsterBody\":\"Loader_hamsterBody__EPppG\",\"hamsterLimb\":\"Loader_hamsterLimb__MIoAu\",\"hamsterLimbFR\":\"Loader_hamsterLimbFR__FBs-o\",\"hamsterFRLimb\":\"Loader_hamsterFRLimb__fYP0Q\",\"hamsterLimbFL\":\"Loader_hamsterLimbFL__FeIe3\",\"hamsterFLLimb\":\"Loader_hamsterFLLimb__-iXDK\",\"hamsterLimbBR\":\"Loader_hamsterLimbBR__YOezN\",\"hamsterLimbBL\":\"Loader_hamsterLimbBL__V-Qtf\",\"hamsterBRLimb\":\"Loader_hamsterBRLimb__Pn6Vj\",\"hamsterBLLimb\":\"Loader_hamsterBLLimb__XC3Pb\",\"hamsterTail\":\"Loader_hamsterTail__1DkVp\"};","import React from 'react';\nimport styles from './Loader.module.css'; // Путь к файлу стилей для лоадера\n\nconst Loader = () => {\n  return (\n    <div className={styles.wheelAndHamster}>\n      <div className={styles.wheel}></div>\n      <div className={styles.hamster}>\n        <div className={styles.hamsterBody}>\n          <div className={styles.hamsterHead}>\n            <div className={styles.hamsterEar}></div>\n            <div className={styles.hamsterEye}></div>\n            <div className={styles.hamsterNose}></div>\n          </div>\n          <div\n            className={`${styles.hamsterLimb} ${styles.hamsterLimbFR}`}\n          ></div>\n          <div\n            className={`${styles.hamsterLimb} ${styles.hamsterLimbFL}`}\n          ></div>\n          <div\n            className={`${styles.hamsterLimb} ${styles.hamsterLimbBR}`}\n          ></div>\n          <div\n            className={`${styles.hamsterLimb} ${styles.hamsterLimbBL}`}\n          ></div>\n          <div className={styles.hamsterTail}></div>\n        </div>\n      </div>\n      <div className={styles.spoke}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const FriendList = styled.ul`\n\n@media screen and (max-width: 767px) {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  \n  padding: 0px 20px 75px 20px;\n  gap: 20px;\n  }\n\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 32px;\n    padding: 0px 32px 204px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n     grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nexport default FriendList;","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  text-align: center;\n  margin-top: 44px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 48px;\n    line-height: 1.375;\n    margin-top: 89px;\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ErrorText = styled.p`\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.375;\n\n  margin: 0;\n\n  padding: 10px 0 10px 0;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    padding: 20px 0 20px 0;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 26px;\n    padding: 30px 0 30px 0;\n  }\n`;\n\nexport const FriendItem = styled.li`\n  width: 280px;\n  padding: 16px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.defaultShadow};\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    border-radius: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n\n    &:hover {\n      box-shadow: ${({ theme }) => theme.shadows.hoverShadow};\n    }\n  }\n`;\n\nexport const FriendLinkTitle = styled.a`\n  display: block;\n  margin-bottom: 16px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.35;\n  color: ${({ theme }) => theme.colors.blue};\n  text-align: center;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.yellow};\n  }\n`;\n\nexport const FriendBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n`;\n\nexport const FriendImgBox = styled.img`\n  margin-right: 16px;\n  max-width: 100px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 120px;\n    margin-right: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 158px;\n    margin-right: 16px;\n  }\n`;\n\nexport const FriendInfoBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  position: relative;\n  gap: 12px;\n`;\n\nexport const TextWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const TextTitle = styled.p`\n  font-weight: 500;\n  font: inherit;\n  font-size: 12px;\n  line-height: 1.34;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.36;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.375;\n  }\n`;\n\nexport const Text = styled.p`\n  font: inherit;\n  margin: 0;\n  font-size: 12px;\n  line-height: 1.34;\n\n  :focus,\n  :hover {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.36;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.375;\n  }\n`;\n\nexport const ContactLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n  font-weight: 500;\n\n  font-size: 12px;\n  line-height: 1.34;\n\n  :focus,\n  :hover {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.36;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.375;\n  }\n`;\n\nexport const WorkTime = styled.p`\n  font: inherit;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.34;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  cursor: pointer;\n  border: none;\n  background-color: inherit;\n\n  :focus {\n    color: blue;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.37;\n  }\n`;\n\nexport const WorkTimeList = styled.ul`\n  padding: 12px;\n  position: absolute;\n  top: 48px;\n  left: 0;\n\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: center;\n\n  background: #ffffff;\n  border: 1px solid blue;\n  /* box-shadow: ; */\n  border-radius: 8px;\n\n  color: black;\n`;\n\nexport const WorkTimeItem = styled.li`\n  width: 121px;\n  font-size: 14px;\n  :not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const WorkTimeItemCurrent = styled.li`\n  color: ${({ theme }) => theme.colors.blue};\n  font-weight: 600;\n  :not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const WorkTimeText = styled.p`\n  display: flex;\n  justify-content: space-between;\n  font: inherit;\n  font-size: ${({ theme }) => theme.fontSizes[0]};\n  font-weight: inherit;\n  line-height: 1.34;\n\n  @media screen and (min-width: ${({ theme }) => theme.media.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n    line-height: 1.36;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.media.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[2]};\n    line-height: 1.38;\n  }\n`;\n","import {\n  WorkTimeList,\n  WorkTimeItem,\n  WorkTimeText,\n  WorkTimeItemCurrent,\n} from './FriendsItem.styled';\nimport { format } from 'date-fns';\n\nconst dayNow = new Date();\nconst dayOfWeek = format(dayNow, 'iiiiii');\n\nconst WorkTimePopup = ({ shedule }) => {\n  const workDays = shedule.map(item =>\n    item.day === dayOfWeek.toUpperCase() ? (\n      <WorkTimeItemCurrent key={item.day}>\n        {item?.isOpen ? (\n          <WorkTimeText>\n            <span>{item.day}</span> {item.from}-{item.to}\n          </WorkTimeText>\n        ) : (\n          <WorkTimeText>\n            <span>{item.day}</span> Closed\n          </WorkTimeText>\n        )}\n      </WorkTimeItemCurrent>\n    ) : (\n      <WorkTimeItem key={item.day}>\n        {item?.isOpen ? (\n          <WorkTimeText>\n            <span>{item.day}</span> {item.from}-{item.to}\n          </WorkTimeText>\n        ) : (\n          <WorkTimeText>\n            <span>{item.day}</span> Closed\n          </WorkTimeText>\n        )}\n      </WorkTimeItem>\n    )\n  );\n  return <WorkTimeList>{workDays}</WorkTimeList>;\n};\n\nexport default WorkTimePopup;","import { useState } from 'react';\n\nimport {\n  FriendItem,\n  FriendLinkTitle,\n  FriendBox,\n  FriendImgBox,\n  FriendInfoBox,\n  TextTitle,\n  Text,\n  ContactLink,\n  TextWrapper,\n  WorkTime,\n} from './FriendsItem.styled';\n\nimport defaultFriendImage from '../../../images/friends/03_mobile.png';\nimport WorkTimePopup from './WorkTimePopup';\n\nconst dayNow = new Date();\nconst numberOfDay = dayNow.getDay();\n\n\nexport const FriendsItem = ({\n    title,\n    url,\n    addressUrl,\n    address,\n    workDays,\n    phone,\n    email,\n    imageUrl,\n}) => {\n\n    const [isVisible, setIsVisible] = useState(true);\n\n    const week = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n    const newWorkDays =\n        workDays &&\n        workDays.map((day, index) => {\n            return { day: week[index], ...day };\n        });\n\n    return (\n   \n        <FriendItem>\n            <FriendLinkTitle\n                href={url}\n                target=\"_blank\"\n                rel=\"noreferrer noopener nofollow\"\n            >\n                {title}\n            </FriendLinkTitle>\n            \n            <FriendBox>\n                <FriendImgBox src={\n                    imageUrl ||\n                    defaultFriendImage\n                } alt={title} />\n        \n                <FriendInfoBox>\n                    <TextWrapper\n                        onClick={() => {\n                            setIsVisible(!isVisible);\n                        }}\n                        onMouseLeave={() => {\n                            setIsVisible(true);\n                        }}>\n                        \n                        {workDays === null ||\n                            workDays === undefined ||\n                            workDays.length === 0 ? (\n                        <>\n                            <TextTitle>Time: </TextTitle>\n                            <Text>day and night</Text>\n                        </>\n                        ) : (\n                            <>\n                                {workDays[numberOfDay - 1]?.isOpen ? (\n                                <>\n                                    <TextTitle>Time:</TextTitle>\n                                    <WorkTime>\n                                        {workDays[numberOfDay - 1].from}-\n                                        {workDays[numberOfDay - 1].to}\n                                    </WorkTime>\n                                </>\n                                ) : (\n                                    <>\n                                        <TextTitle>Time:</TextTitle>\n                                        <WorkTime>Closed</WorkTime>\n                                    </>\n                                )}\n                                {isVisible || <WorkTimePopup shedule={newWorkDays} />}\n                            </>\n                        )}\n                    </TextWrapper>\n                    <TextWrapper>\n                        <TextTitle>Address:</TextTitle>\n                        {addressUrl ? (\n                            <ContactLink href={addressUrl} target=\"_blank\">\n                                {address}\n                            </ContactLink>\n                        ) : (\n                            <Text>website only</Text>\n                        )}\n                    </TextWrapper>\n                    <TextWrapper>\n                        <TextTitle>Email:</TextTitle>\n                        {email ? (\n                            <ContactLink href={`mailto:${email}`}>{email}</ContactLink>\n                        ) : (\n                            <Text>website only</Text>\n                        )}\n                    </TextWrapper>\n                    <TextWrapper>\n                        <TextTitle>Phone:</TextTitle>\n                        {phone ? (\n                            <ContactLink href={`tel:${phone}`}>{phone}</ContactLink>\n                        ) : (\n                            <Text>email only</Text>\n                        )}\n                    </TextWrapper>\n                </FriendInfoBox>\n            </FriendBox>\n            \n        </FriendItem>\n    );\n};\n","import FriendList from '../OurFriends/OurFriends.styled';\nimport { FriendsItem } from './FriendsItem/FriendsItem';\n\nconst OurFriends = ({ friends }) => {\n  \n    const friendsList = friends.map(\n    ({\n        title,\n        url,\n        addressUrl,\n        imageUrl,\n        address,\n        workDays,\n        phone,\n        email,\n    }) => (\n      <FriendsItem\n        key={title}\n        title={title}\n        url={url}\n        addressUrl={addressUrl}\n        imageUrl={imageUrl}\n        address={address}\n        workDays={workDays}\n        phone={phone}\n        email={email}\n      />\n    )\n  );\n\n  return (\n      <>\n      <FriendList>{friendsList}</FriendList>\n    </>\n  );\n};\n\nexport default OurFriends;","export const getAllFriends = ({ friends }) => friends.items;\nexport const loading = ({ friends }) => friends.isLoading;\nexport const error = ({ friends }) => friends.error;\n","import { useEffect } from 'react';\n// import { useEffect, useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport OurFriends from '../components/OurFriends/OurFriends';\nimport Loader from '../components/Loader/Loader';\nimport friends from '../components/OurFriends/sponsors.json';\nimport {\n  PageTitle,\n  LoaderWrap,\n  ErrorText,\n} from '../components/OurFriends/FriendsItem/FriendsItem.styled';\n\nimport { fetchFriends } from '../redux/friends/friendsOperations';\nimport { loading, error } from '../redux/friends/friendsSelectors';\n// import {\n//   getAllFriends,\n//   loading,\n//   error,\n// } from '../redux/friends/friendsSelectors';\n\nconst OurFriendsPage = () => {\n  const isLoading = useSelector(loading);\n  const isError = useSelector(error);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchFriends());\n  }, [dispatch]);\n\n  return (\n    <>\n      <PageTitle>Our Friends</PageTitle>\n      {isLoading && (\n        <LoaderWrap>\n          {' '}\n          <Loader />{' '}\n        </LoaderWrap>\n      )}\n      {!isLoading && !isError && <OurFriends friends={friends} />}\n      {isError && <ErrorText>{`${isError}, try again later`}</ErrorText>}\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["className","styles","styled","PageTitle","LoaderWrap","ErrorText","FriendItem","theme","colors","white","shadows","defaultShadow","hoverShadow","FriendLinkTitle","blue","yellow","FriendBox","FriendImgBox","FriendInfoBox","TextWrapper","TextTitle","black","Text","ContactLink","WorkTime","WorkTimeList","WorkTimeItem","WorkTimeItemCurrent","WorkTimeText","fontSizes","media","tablet","desktop","dayNow","Date","dayOfWeek","format","workDays","shedule","map","item","day","toUpperCase","isOpen","from","to","numberOfDay","getDay","FriendsItem","title","url","addressUrl","address","phone","email","imageUrl","useState","isVisible","setIsVisible","week","newWorkDays","index","href","target","rel","src","alt","onClick","onMouseLeave","undefined","length","friendsList","friends","loading","isLoading","error","useSelector","isError","dispatch","useDispatch","useEffect","fetchFriends","Loader"],"sourceRoot":""}