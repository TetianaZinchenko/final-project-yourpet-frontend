{"version":3,"file":"static/js/854.7a01b749.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport bg_mobile from '../../images/bg_page/mobile-bg-page_1x.png';\nimport bg_tablet from '../../images/bg_page/tablet-bg-page_1x.png';\nimport bg_desktop from '../../images/bg_page/desc-bg-page_1x.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${bg_mobile});\n  background-repeat: space repeat;\n  background-size: contain;\n  background-position-y: center;\n\n  @media (min-width: 768px) {\n    background-image: url(${bg_tablet});\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n    background-image: url(${bg_desktop});\n    padding-top: 82px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n  margin: 92px auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin: 82px auto;\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #f43f5e;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\nexport const AppBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #00c3ad;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ClearInput = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const StyledLink = styled.a`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  align-items: center;\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  Formik } from 'formik';\nimport * as yup from 'yup';\nimport { ref } from 'yup';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport { FcGoogle } from 'react-icons/fc'\n\nimport {signUp } from 'redux/auth/authOperations';\n\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ShowPassword,\n  StyledLink,\n  GoogleLink, ClearInput, AppBox,\n} from '../LoginForm/LoginForm.styled';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\n\n\n\nconst RegisterSchema= () => yup.object().shape({\n  password: yup.string()\n    .min(6, 'Too short min 6 characters')\n    .max(16, 'Too long max 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n      'Password should be min 6 characters, 1 uppercase, 1 lowercase, 1 number',\n    )\n    .required('Password is required')\n    .trim(),\n  confirmPassword: yup.string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: yup.string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .trim(),\n});\n\nexport const RegisterForm = () => {\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const formSubmit = values => {\n    dispatch(signUp(values ))\n\n  }\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n  const clearInput = ()=>{\n    const inputs = document.querySelector('input[type=email]');\n    inputs.value = '';\n  }\n\n\n  return (\n    <>\n      <FormContainer>\n        <Formik validationSchema={RegisterSchema}\n                initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n          formSubmit({values});\n          setSubmitting(false);\n          resetForm()\n        }}>\n          {({ errors, touched }) => (\n          <Forma>\n            <Title>Register</Title>\n            <div>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                style={{\n                  border:\n                    touched.email &&\n                    (errors.email\n                      ? '1px solid #F43F5E'\n                      : '1px solid #00C3AD')\n                }}\n              />\n              {touched.email && (errors.email ? (\n                <ErrBox>{errors.email}</ErrBox>\n              ) : (\n                <AppBox>Email is correct</AppBox>\n              ))}\n              <ClearInput > {touched.email &&\n                (!errors.email ?  <AiOutlineCheck style={{fill:'#00C3AD'}} /> : <AiOutlineClose style={{fill:'#F43F5E'}} onClick={clearInput}/>)}</ClearInput>\n            </div>\n            <div>\n              <Input\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                placeholder=\"Password\"\n                style={{\n                  border:\n                    touched.password &&\n                    (errors.password\n                      ? '1px solid #F43F5E'\n                      : '1px solid #00C3AD')\n                }}\n              />\n\n              <ShowPassword onClick={showPassword}>\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              {touched.password && (errors.password ? (\n                <ErrBox>{errors.password}</ErrBox>\n              ) :(\n                <AppBox>Password is secure</AppBox>\n              ))}\n            </div>\n\n            <div>\n              <Input\n                name=\"confirmPassword\"\n                type={showConfirmPass ? 'text' : 'password'}\n                placeholder=\"Confirm Password\"\n                style={{\n                  border:\n                    touched.confirmPassword &&\n                    (errors.confirmPassword\n                      ? '1px solid #F43F5E'\n                      : '1px solid #00C3AD')\n                }}\n              />\n              <ShowPassword onClick={showConfirmPassword}>\n                {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              {touched.confirmPassword &&\n                (errors.confirmPassword ? (\n                <ErrBox>{errors.confirmPassword}</ErrBox>\n              )  :(\n                <AppBox>Password is matched</AppBox>\n                ))}\n            </div>\n            <Button type=\"button\" onClick={formSubmit} >\n              Registration\n            </Button>\n            <div><GoogleLink href=\"https://google\"> <FcGoogle style={{width: \"2em\", height: \"2em\" }}/> Register with a Google account</GoogleLink></div>\n            <div>\n              <span>Already have an account?</span>{' '}\n              <StyledLink to=\"/login\">Login</StyledLink>\n            </div>\n          </Forma>\n          )}\n        </Formik>\n      </FormContainer>\n    </>\n  );\n};\n","import  { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n    return (\n      <div>\n        <section>\n          <RegisterForm />\n        </section>\n      </div>\n    )\n}\n\nexport default RegisterPage;"],"names":["FormContainer","styled","bg_mobile","bg_tablet","bg_desktop","Title","Forma","Form","ShowPassword","Input","Field","Button","ErrBox","AppBox","ClearInput","StyledLink","GoogleLink","RegisterSchema","yup","shape","password","min","max","matches","required","trim","confirmPassword","oneOf","ref","email","RegisterForm","useState","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","formSubmit","values","signUp","showPassword","showConfirmPassword","clearInput","document","querySelector","value","validationSchema","initialValues","onSubmit","setSubmitting","resetForm","errors","touched","name","type","placeholder","style","border","fill","onClick","href","width","height","to"],"sourceRoot":""}