{"version":3,"file":"static/js/948.84d8325c.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport {\n  desc1x,\n  desc2x,\n  desc3x,\n  tablet1x,\n  tablet2x,\n  tablet3x,\n  mobile1x,\n  mobile2x,\n  mobile3x,\n} from '../../images/bg_page/index';\n\n\nexport const FormContainer = styled.div`\n  width: 100vw;\n  min-height: calc(100vh - 48px);\n  margin: 0 auto;\n  padding-top: 92px;\n  background-image: url(${mobile1x});\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-position: center top;\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n  @media (min-width: 768px) {\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n    background-image: url(${tablet1x});\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${tablet2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${tablet3x});\n  }\n}\n  @media (min-width: 1280px) {\n    padding-top: 82px;\n    padding-bottom: 147px;\n    background-image: url(${desc1x});\n    @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin-left: 80px;\n\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n    margin-left: 300px;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  fill:white;\n  stroke: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n        ? props.theme.colors.green\n        : props.theme.colors.blue};\n\n  svg {\n    width: inherit;\n    height: inherit;\n\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid;\n    border-color: ${props =>\n  props.error\n    ? props.theme.colors.red\n    : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #f43f5e;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\nexport const AppBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #00c3ad;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ClearInput = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n\n`;\nexport const StyledLink = styled(NavLink)`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  align-items: center;\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport {\n    desc1x,\n    desc2x,\n    desc3x,\n    tablet1x,\n    tablet2x,\n    tablet3x,\n    mobile1x,\n    mobile2x,\n    mobile3x,\n  } from '../../images/bg_page/index';\n\n\n\nexport const SectionStyle = styled.section`\n    max-width: 100%;\n    background-color: ${props => props.theme.colors.background};\n\n    ${props => props.$bg && ` \n  max-height: calc(100vh - 48px);\n  margin: 0 auto;\n  background-repeat: no-repeat;\n  background-position: center top;\n  background-size: 100%;\n  background-image: url(${mobile1x});\n\n  background-color: ${props => props.theme.colors.background};\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    background-image: url(${tablet1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${tablet2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n      screen and (min-resolution: 288dpi),\n      screen and (min-resolution: 3dppx) {\n      background-image: url(${tablet3x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-height: calc(100vh - 72px);\n    background-image: url(${desc1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n      screen and (min-resolution: 288dpi),\n      screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n    `}\n`\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 320px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 786px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n","import { Container, SectionStyle } from './Section.styled';\n\nexport const Section = ({ children, ...props }) => {\n  return (\n    <SectionStyle {...props}>\n      <Container>{children}</Container>\n    </SectionStyle>\n  );\n};\n","import { useState } from 'react';\nimport React from 'react';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik} from 'formik';\nimport icons from '../../icons/icons.svg'\nimport { signIn } from 'redux/auth/authOperations';\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  AppBox,\n  ShowPassword,\n  StyledLink,\n  ClearInput,\n} from './LoginForm.styled';\n\n\n\nconst LoginSchema =\n  object().shape({\n    email:\n      string()\n      .required('Email is required')\n      .email('Enter a valid Email')\n    .trim(),\n    password:\n      string()\n      .required('Password is required')\n      .min(6, 'Too short min 6 characters')\n      .max(16, 'Too long max 16 characters')\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/,\n        'Password should be min 6 characters, 1 uppercase, 1 lowercase, 1 number'\n      )\n      .trim(),\n  });\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPass, setShowPass] = useState(false);\n  const formSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(signIn({ email, password }));\n    resetForm();\n  };\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const clearInput = () => {\n    const inputs = document.querySelector('input[type=email]');\n    inputs.value = '';\n  };\n  return (\n\n      <FormContainer>\n        <Formik\n          validationSchema={LoginSchema}\n          initialValues={{ email: '',\n            password: '',}}\n          onSubmit={formSubmit}\n        >\n          {({ errors, touched }) => (\n            <Forma>\n              <Title>Login</Title>\n              <div>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"off\"\n                  placeholder=\"Email\"\n                  error={errors.email && touched.email && 'false'}\n                  valid={!errors.email && touched.email ? 'true' :  undefined}\n                />\n                {touched.email &&\n                  (errors.email ? (\n                    <ErrBox>{errors.email}</ErrBox>\n                  ) : (\n                    <AppBox>Email is correct</AppBox>\n                  ))}\n                <ClearInput>\n                  {' '}\n                  {touched.email &&\n                    (!errors.email ? <svg style={{ fill: 'white', stroke: '#00C3AD' }}><use href={icons +'#icon-check'}></use></svg>\n                     :  <svg style={{ fill: 'white', stroke: '#F43F5E' }} onClick={clearInput}><use href={icons +'#icon-cross-small'}></use></svg>\n                    )}\n                </ClearInput>\n              </div>\n              <div>\n                <Input\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  error={errors.password && touched.password && 'false'}\n                  valid={!errors.password && touched.password ? 'true' :  undefined}\n                />\n\n                <ShowPassword onClick={showPassword}  error={errors.password && touched.password && 'false'}  valid={!errors.password && touched.password && '!null'}>\n                  {!showPass ? <svg><use href={icons +'#icon-eye-closed'}></use></svg> :  <svg><use href={icons +'#icon-eye-open'}></use></svg>}\n                </ShowPassword>\n                {touched.password &&\n                  (errors.password ? (\n                    <ErrBox>{errors.password}</ErrBox>\n                  ) : (\n                    <AppBox>Password is secure</AppBox>\n                  ))}\n              </div>\n\n              <Button type=\"submit\" >Login</Button>\n\n              <div>\n                <span>Don't have an account?</span>{' '}\n                <StyledLink to=\"/register\">Register</StyledLink>\n              </div>\n            </Forma>\n          )}\n        </Formik>\n      </FormContainer>\n  );\n};\n\n","import {LoginForm} from 'components/LoginForm/LoginForm';\nimport {Section} from '../components/Section/Section';\n\nconst  LoginPage = () => {\n  return (\n<Section>\n    <LoginForm />\n</Section>\n  );\n};\nexport default LoginPage;\n\n"],"names":["FormContainer","styled","mobile1x","mobile2x","mobile3x","tablet1x","tablet2x","tablet3x","desc1x","desc2x","desc3x","Title","Forma","Form","ShowPassword","props","error","theme","colors","red","valid","green","blue","Input","Field","Button","ErrBox","AppBox","ClearInput","StyledLink","NavLink","GoogleLink","SectionStyle","background","$bg","Container","Section","children","LoginSchema","object","shape","email","string","required","trim","password","min","max","matches","LoginForm","dispatch","useDispatch","useState","showPass","setShowPass","showPassword","clearInput","document","querySelector","value","validationSchema","initialValues","onSubmit","resetForm","signIn","errors","touched","name","type","autoComplete","placeholder","undefined","style","fill","stroke","onClick","href","icons","to"],"sourceRoot":""}