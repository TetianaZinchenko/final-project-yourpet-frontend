{"version":3,"file":"static/js/948.3e98cfc6.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport bg_mobile from '../../images/bg_page/mobile-bg-page_1x.png';\nimport bg_tablet from '../../images/bg_page/tablet-bg-page_1x.png';\nimport bg_desktop from '../../images/bg_page/desc-bg-page_1x.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${bg_mobile});\n  background-repeat: space repeat;\n  background-size: contain;\n  background-position-y: center;\n\n  @media (min-width: 768px) {\n    background-image: url(${bg_tablet});\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n    background-image: url(${bg_desktop});\n    padding-top: 82px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n  margin: 92px auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin: 82px auto;\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\n\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color:  #F43F5E;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\nexport const AppBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #00C3AD;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ClearInput = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const StyledLink = styled.a`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  align-items: center;\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport {\n    desc1x,\n    desc2x,\n    desc3x,\n    tablet1x,\n    tablet2x,\n    tablet3x,\n    mobile1x,\n    mobile2x,\n    mobile3x,\n  } from '../../images/bg_page/index';\n\n\n\nexport const SectionStyle = styled.section`\n    width: 100vw;\n    background-color: ${props => props.theme.colors.background};\n\n    ${props => props.$bg && `\n  width: 100vw;  \n  height: calc(100vh - 48px);\n  margin: 0 auto;\n  background-repeat: no-repeat;\n  background-position: center top;\n  background-size: 100%;\n  background-image: url(${mobile1x});\n\n  background-color: ${props => props.theme.colors.background};\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    background-image: url(${tablet1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${tablet2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n      screen and (min-resolution: 288dpi),\n      screen and (min-resolution: 3dppx) {\n      background-image: url(${tablet3x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desc1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n      screen and (min-resolution: 288dpi),\n      screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n    `}\n`\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 320px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 786px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n    padding-top: 20px;\n  }\n`;\n","import { Container, SectionStyle } from './Section.styled';\n\nexport const Section = ({ children, ...props }) => {\n  return (\n    <SectionStyle {...props}>\n      <Container>{children}</Container>\n    </SectionStyle>\n  );\n};\n","import { useState } from 'react';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\nimport { signIn } from 'redux/auth/authOperations';\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  AppBox,\n  ShowPassword,\n  StyledLink,\n  ClearInput,\n} from './LoginForm.styled';\nimport { Section } from '../Section/Section';\n\nconst LoginSchema = () =>\n  yup.object().shape({\n    email: yup\n      .string()\n      .required(`Email is required`)\n      .email(`Enter a valid Email`)\n      .trim(),\n    password: yup\n      .string()\n      .required(`Password is required`)\n      .min(6, `Too short min 6 characters`)\n      .max(16, `Too long max 16 characters`)\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n        'Password should be min 6 characters, 1 uppercase, 1 lowercase, 1 number'\n      )\n      .trim(),\n  });\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPass, setShowPass] = useState(false);\n  const formSubmit = values => {\n    dispatch(signIn(values));\n  };\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const clearInput = () => {\n    const inputs = document.querySelector('input[type=email]');\n    inputs.value = '';\n  };\n  return (\n    <Section>\n      <FormContainer>\n        <Formik\n          validationSchema={LoginSchema}\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          onSubmit={(values, { resetForm }) => {\n            formSubmit({ values });\n            resetForm();\n          }}\n        >\n          {({ errors, touched }) => (\n            <Forma>\n              <Title>Login</Title>\n              <div>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"off\"\n                  placeholder=\"Email\"\n                  style={{\n                    border:\n                      touched.email &&\n                      (errors.email\n                        ? '1px solid #F43F5E'\n                        : '1px solid #00C3AD'),\n                  }}\n                />\n                {touched.email &&\n                  (errors.email ? (\n                    <ErrBox>{errors.email}</ErrBox>\n                  ) : (\n                    <AppBox>Email is correct</AppBox>\n                  ))}\n                <ClearInput>\n                  {' '}\n                  {touched.email &&\n                    (!errors.email ? (\n                      <AiOutlineCheck style={{ fill: '#00C3AD' }} />\n                    ) : (\n                      <AiOutlineClose\n                        style={{ fill: '#F43F5E' }}\n                        onClick={clearInput}\n                      />\n                    ))}\n                </ClearInput>\n              </div>\n              <div>\n                <Input\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  style={{\n                    border:\n                      touched.password &&\n                      (errors.password\n                        ? '1px solid #F43F5E'\n                        : '1px solid #00C3AD'),\n                  }}\n                />\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {touched.password &&\n                  (errors.password ? (\n                    <ErrBox>{errors.password}</ErrBox>\n                  ) : (\n                    <AppBox>Password is secure</AppBox>\n                  ))}\n              </div>\n\n              <Button type=\"submit\">Login</Button>\n\n              <div>\n                <span>Don't have an account?</span>{' '}\n                <StyledLink to=\"/register\">Register</StyledLink>\n              </div>\n            </Forma>\n          )}\n        </Formik>\n      </FormContainer>\n    </Section>\n  );\n};\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst  LoginPage = () => {\n  return (\n<>\n    <LoginForm />\n</>\n  );\n};\nexport default LoginPage;\n\n"],"names":["FormContainer","styled","bg_mobile","bg_tablet","bg_desktop","Title","Forma","Form","ShowPassword","Input","Field","Button","ErrBox","AppBox","ClearInput","StyledLink","GoogleLink","SectionStyle","props","theme","colors","background","$bg","mobile1x","mobile2x","mobile3x","tablet1x","tablet2x","tablet3x","desc1x","desc2x","desc3x","Container","Section","children","LoginSchema","yup","shape","email","required","trim","password","min","max","matches","dispatch","useDispatch","useState","showPass","setShowPass","showPassword","clearInput","document","querySelector","value","validationSchema","initialValues","onSubmit","values","resetForm","signIn","formSubmit","errors","touched","name","type","autoComplete","placeholder","style","border","fill","onClick","to"],"sourceRoot":""}