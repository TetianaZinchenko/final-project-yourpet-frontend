{"version":3,"file":"static/js/578.fa11c49b.chunk.js","mappings":"mSAMaA,EAAgBC,EAAAA,EAAAA,IAAH,seAGAC,EAMEC,EAMAC,GAMfC,EAAQJ,EAAAA,EAAAA,GAAH,gMAWLK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,qlB,GA8BUA,EAAAA,EAAAA,KAAH,yOAeJA,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,2aAuBIA,EAAAA,EAAAA,OAAH,kgCAsDGA,EAAAA,EAAAA,IAAH,4LAYOA,EAAAA,EAAAA,EAAH,mH,QC5JjBQ,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,KAAK,WAAY,CACnCC,GAAI,SAAAC,GAAK,MAAc,aAAVA,CAAJ,EACTC,KAAMN,EAAAA,KAEHO,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,SAAS,gDACZC,UAAWV,EAAAA,OAEbW,SAAUX,EAAAA,KAEPY,MAAM,CAAC,WAAY,OAAQ,aAAc,kBACzCH,SAAS,wBACZI,KAAMb,EAAAA,KAEHO,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,SAAS,+CACZK,KAAMd,EAAAA,KAEHe,QAAQ,wBAAyB,4BACjCN,SAAS,wCACZO,MAAOhB,EAAAA,GACG,oBACPO,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,SAAS,gDACZQ,KAAMjB,EAAAA,KAEHkB,KAAK,WAAY,0BAA0B,SAAAb,GAAK,OAAS,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOc,OAAQ,OAAnB,IAChDD,KACC,WACA,gCACA,SAAAb,GAAK,OACFA,GAAS,CAAC,YAAa,aAAc,aAAae,SAASf,EAAMgB,KAD/D,IAGNZ,SAAS,qBACZa,IAAKtB,EAAAA,KAAaG,KAAK,WAAY,CACjCC,GAAI,SAAAC,GAAK,MACG,SAAVA,GAA8B,eAAVA,GAAoC,kBAAVA,CADvC,EAETC,KAAMN,EAAAA,KAAaY,MAAM,CAAC,SAAU,SAASH,SAAS,mBACtDC,UAAWV,EAAAA,OAEbuB,SAAUvB,EAAAA,KAAaG,KAAK,WAAY,CACtCC,GAAI,SAAAC,GAAK,MAAc,aAAVA,CAAJ,EACTC,KAAMN,EAAAA,KAEHe,QAAQ,mBAAoB,yCAC5BN,SAAS,oBACZC,UAAWV,EAAAA,OAEbwB,MAAOxB,EAAAA,KAAaG,KAAK,WAAY,CACnCC,GAAI,SAAAC,GAAK,MAAc,SAAVA,CAAJ,EACTC,KAAMN,EAAAA,KAEHyB,SAAS,EAAG,gCACZhB,SAAS,qBACZC,UAAWV,EAAAA,OAEb0B,SAAU1B,EAAAA,KAEPO,IAAI,EAAG,wBACPC,IAAI,IAAK,4BAKDmB,EAAS,WACpB,OACA,+BACE,SAACrC,EAAD,WACI,SAAC,KAAD,CAAQsC,iBAAkB7B,EAA1B,UACE,SAACH,EAAD,WACE,SAACD,EAAD,6BAMX,EC1FD,EAJmB,WACjB,OAAO,SAACgC,EAAD,GACR,C","sources":["components/AddPet/AddPet.styled.js","components/AddPet/AddPet.jsx","pages/AddPetPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport bg_mobile from '../../images/bg_page/mobile-bg-page_1x.png';\nimport bg_tablet from '../../images/bg_page/tablet-bg-page_1x.png';\nimport bg_desktop from '../../images/bg_page/desc-bg-page_1x.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${bg_mobile});\n  background-repeat: space repeat;\n  background-size: contain;\n  background-position-y: center;\n\n  @media (min-width: 768px) {\n    background-image: url(${bg_tablet});\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n    background-image: url(${bg_desktop});\n    padding-top: 82px;\n    padding-bottom: 147px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 38px;\n  margin-bottom: 24px;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\n\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  // flex-direction: column;\n  // justify-content: center;\n  // align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n  margin: 92px auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin: 82px auto;\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 20px 32px;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import React from 'react';\nimport * as yup from 'yup';\n// import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport {\n  Forma,\n  FormContainer,\n  // Input,\n  // Button,\n  Title,\n  // ErrBox,\n  // ShowPassword,\n  // StyledLink,\n} from './AddPet.styled';\n\nconst addPetFormSchema = yup.object().shape({\n  title: yup.string().when('category', {\n    is: value => value !== 'your pet',\n    then: yup\n      .string()\n      .min(2, 'Minimum 2 characters')\n      .max(16, 'Maximum 16 characters')\n      .required('Title is required (min 2, max 16 characters)'),\n    otherwise: yup.string(),\n  }),\n  category: yup\n    .string()\n    .oneOf(['your pet', 'sell', 'lost/found', 'in good hands'])\n    .required('Category is required'),\n  name: yup\n    .string()\n    .min(2, 'Minimum 2 characters')\n    .max(16, 'Maximum 16 characters')\n    .required('Name is required (min 2, max 16 characters)'),\n  date: yup\n    .string()\n    .matches(/^\\d{2}\\.\\d{2}\\.\\d{4}$/, 'DD.MM.YYYY format needed')\n    .required('Date is required (DD.MM.YYYY format)'),\n  breed: yup\n    .string('Must be a string')\n    .min(2, 'Minimum 2 characters')\n    .max(16, 'Maximum 16 characters')\n    .required('Breed is required (min 2, max 16 characters)'),\n  file: yup\n    .mixed()\n    .test('fileSize', 'File size is too large', value => value?.size <= 3145728)\n    .test(\n      'fileType',\n      'Only image files are allowed',\n      value =>\n        !value || ['image/jpg', 'image/jpeg', 'image/png'].includes(value.type)\n    )\n    .required('Photo is required'),\n  sex: yup.string().when('category', {\n    is: value =>\n      value === 'sell' || value === 'lost/found' || value === 'in good hands',\n    then: yup.string().oneOf(['Female', 'Male']).required('Sex is required'),\n    otherwise: yup.string(),\n  }),\n  location: yup.string().when('category', {\n    is: value => value !== 'your pet',\n    then: yup\n      .string()\n      .matches(/^[A-Z][a-zA-Z]*$/, 'City begins with capitalize character')\n      .required('City is required'),\n    otherwise: yup.string(),\n  }),\n  price: yup.number().when('category', {\n    is: value => value === 'sell',\n    then: yup\n      .number()\n      .moreThan(0, 'Price must be greater than 0')\n      .required('Price is required'),\n    otherwise: yup.number(),\n  }),\n  comments: yup\n    .string()\n    .min(8, 'Minimum 8 characters')\n    .max(120, 'Maximum 120 characters'),\n});\n\n\n\nexport const AddPet = () => {\n  return (\n  <>\n    <FormContainer>\n        <Formik validationSchema={addPetFormSchema}>\n          <Forma>\n            <Title>Add Pet</Title>\n          </Forma>\n      </Formik>\n    </FormContainer>\n  </>\n  );\n};\n","import { AddPet } from 'components/AddPet/AddPet';\n\nconst AddPetPage = () => {\n  return <AddPet />;\n};\n\nexport default AddPetPage;\n"],"names":["FormContainer","styled","bg_mobile","bg_tablet","bg_desktop","Title","Forma","Form","Field","addPetFormSchema","yup","shape","title","when","is","value","then","min","max","required","otherwise","category","oneOf","name","date","matches","breed","file","test","size","includes","type","sex","location","price","moreThan","comments","AddPet","validationSchema"],"sourceRoot":""}