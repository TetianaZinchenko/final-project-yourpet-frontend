{"version":3,"file":"static/js/833.d2f4e279.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport {\n  desc1x,\n  desc2x,\n  desc3x,\n  tablet1x,\n  tablet2x,\n  tablet3x,\n  mobile1x,\n  mobile2x,\n  mobile3x,\n} from '../../images/bg_page/index';\n\n\nexport const FormContainer = styled.div`\n  width: 100vw;\n  min-height: calc(100vh - 48px);\n  margin: 0 auto;\n  padding-top: 92px;\n  background-image: url(${mobile1x});\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-position: center top;\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n  @media (min-width: 768px) {\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n    background-image: url(${tablet1x});\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${tablet2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${tablet3x});\n  }\n}\n  @media (min-width: 1280px) {\n    padding-top: 82px;\n    padding-bottom: 147px;\n    background-image: url(${desc1x});\n    @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin-left: 80px;\n\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n    margin-left: 300px;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  fill: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n        ? props.theme.colors.green\n        : props.theme.colors.blue};\n\n  svg {\n    width: inherit;\n    height: inherit;\n\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid;\n    border-color: ${props =>\n  props.error\n    ? props.theme.colors.red\n    : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #f43f5e;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\nexport const AppBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #00c3ad;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ClearInput = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n  //&.isValid{\n  //  display: none;\n  //}\n`;\nexport const StyledLink = styled.a`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  align-items: center;\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport {\n    desc1x,\n    desc2x,\n    desc3x,\n    tablet1x,\n    tablet2x,\n    tablet3x,\n    mobile1x,\n    mobile2x,\n    mobile3x,\n  } from '../../images/bg_page/index';\n\n\n\nexport const SectionStyle = styled.section`\n    max-width: 100%;\n    background-color: ${props => props.theme.colors.background};\n\n    ${props => props.$bg && ` \n  max-height: calc(100vh - 48px);\n  margin: 0 auto;\n  background-repeat: no-repeat;\n  background-position: center top;\n  background-size: 100%;\n  background-image: url(${mobile1x});\n\n  background-color: ${props => props.theme.colors.background};\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    background-image: url(${tablet1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${tablet2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n      screen and (min-resolution: 288dpi),\n      screen and (min-resolution: 3dppx) {\n      background-image: url(${tablet3x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-height: calc(100vh - 72px);\n    background-image: url(${desc1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n      screen and (min-resolution: 288dpi),\n      screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n    `}\n`\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 320px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 786px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n","import { Container, SectionStyle } from './Section.styled';\n\nexport const Section = ({ children, ...props }) => {\n  return (\n    <SectionStyle {...props}>\n      <Container>{children}</Container>\n    </SectionStyle>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  Formik } from 'formik';\nimport { object, string, ref } from 'yup';\nimport { FcGoogle } from 'react-icons/fc'\n\nimport {signUp } from 'redux/auth/authOperations';\n\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ShowPassword,\n  StyledLink,\n  GoogleLink, ClearInput, AppBox,\n} from '../LoginForm/LoginForm.styled';\nimport icons from '../../icons/icons.svg';\n\n\n\nconst RegisterSchema = object().shape({\n  password: string()\n    .min(6, 'Too short min 6 characters')\n    .max(16, 'Too long max 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n      'Password should be min 6 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .required('Password is required')\n    .trim(),\n  confirmPassword: string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .trim(),\n});\n\nexport const RegisterForm = () => {\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const formSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(signUp({ email, password }));\n    resetForm();\n  }\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n  const clearInput = ()=>{\n    const inputs = document.querySelector('input[type=email]');\n    inputs.value = '';\n  }\n\n\n  return (\n    <>\n      <FormContainer>\n        <Formik validationSchema={RegisterSchema}\n                initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n                onSubmit={formSubmit}\n        >\n          {({ errors, touched }) => (\n          <Forma>\n            <Title>Register</Title>\n            <div>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                error={errors.email && touched.email && 'false'}\n                valid={!errors.email && touched.email ? 'true' :  undefined}\n\n              />\n              {touched.email && (errors.email ? (\n                <ErrBox>{errors.email}</ErrBox>\n              ) : (\n                <AppBox>Email is correct</AppBox>\n              ))}\n              <ClearInput > {touched.email && (!errors.email ? <svg style={{ fill: '#00C3AD' }}><use href={icons +'#icon-check'}></use></svg>\n                :  <svg style={{ fill: '#F43F5E' }} onClick={clearInput}><use href={icons +'#icon-cross-small'}></use></svg>\n                )}</ClearInput>\n            </div>\n            <div>\n              <Input\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                placeholder=\"Password\"\n                error={errors.password && touched.password && 'false'}\n                valid={!errors.password && touched.password ? 'true' :  undefined}\n              />\n\n              <ShowPassword onClick={showPassword}  error={errors.password && touched.password && 'false'}\n                            valid={!errors.password && touched.password && '!null'}>\n                {!showPass ? <svg><use href={icons +'#icon-eye-closed'}></use></svg> :  <svg><use href={icons +'#icon-eye-open'}></use></svg>}\n              </ShowPassword>\n              {touched.password && (errors.password ? (\n                <ErrBox>{errors.password}</ErrBox>\n              ) :(\n                <AppBox>Password is secure</AppBox>\n              ))}\n            </div>\n\n            <div>\n              <Input\n                name=\"confirmPassword\"\n                type={showConfirmPass ? 'text' : 'password'}\n                placeholder=\"Confirm Password\"\n                error={errors.confirmPassword && touched.confirmPassword && 'false'}\n                valid={!errors.confirmPassword && touched.confirmPassword ?'true' :  undefined}\n\n              />\n              <ShowPassword onClick={showConfirmPassword} error={errors.confirmPassword && touched.confirmPassword && 'false'}\n                            valid={!errors.confirmPassword && touched.confirmPassword && '!null'}>\n                {!showPass ? <svg><use href={icons +'#icon-eye-closed'}></use></svg> :  <svg><use href={icons +'#icon-eye-open'}></use></svg>}\n              </ShowPassword>\n              {touched.confirmPassword &&\n                (errors.confirmPassword ? (\n                <ErrBox>{errors.confirmPassword}</ErrBox>\n              )  :(\n                <AppBox>Password is matched</AppBox>\n                ))}\n            </div>\n            <Button type=\"submit\"  >\n              Registration\n            </Button>\n            <div><GoogleLink href=\"https://google\"> <FcGoogle style={{width: \"2em\", height: \"2em\" }}/> Register with a Google account</GoogleLink></div>\n            <div>\n              <span>Already have an account?</span>{' '}\n              <StyledLink to=\"/login\">Login</StyledLink>\n            </div>\n          </Forma>\n          )}\n        </Formik>\n      </FormContainer>\n    </>\n  );\n};\n","import  { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport {Section} from '../components/Section/Section';\n\nconst RegisterPage = () => {\n    return (\n        <Section>\n          <RegisterForm />\n        </Section>\n    )\n}\n\nexport default RegisterPage;\n"],"names":["FormContainer","styled","mobile1x","mobile2x","mobile3x","tablet1x","tablet2x","tablet3x","desc1x","desc2x","desc3x","Title","Forma","Form","ShowPassword","props","error","theme","colors","red","valid","green","blue","Input","Field","Button","ErrBox","AppBox","ClearInput","StyledLink","GoogleLink","SectionStyle","background","$bg","Container","Section","children","RegisterSchema","object","shape","password","string","min","max","matches","required","trim","confirmPassword","oneOf","ref","email","RegisterForm","useState","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","showPassword","showConfirmPassword","clearInput","document","querySelector","value","validationSchema","initialValues","onSubmit","resetForm","signUp","errors","touched","name","type","placeholder","undefined","style","fill","onClick","href","icons","width","height","to"],"sourceRoot":""}