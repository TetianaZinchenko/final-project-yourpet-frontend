{"version":3,"file":"static/js/854.71e34535.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (min-width: 768px) {\n\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: #fff;\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54ADFF;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid #54ADFF;\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  };\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\n\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54ADFF;\n  border: 1px solid #54ADFF;\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\n\n\n\n\nexport const StyledLink = styled.a`\n  color: #54ADFF;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { object, string, ref } from 'yup';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport { FcGoogle } from 'react-icons/fc'\n\n\nimport {signUp } from 'redux/auth/authOperations';\n\n\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ShowPassword,\n  StyledLink,\n} from '../LoginForm/LoginForm.styled';\n\n\nconst RegisterSchema = object().shape({\n  password: string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Password is required'),\n  confirmPassword: string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: string()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Invalid email'\n    )\n    .email('Invalid email')\n    .required('Email is required'),\n\n});\n\nexport const RegisterForm = () => {\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const onSubmit = async (values, { setSubmitting, resetForm }) => {\n    setSubmitting(false);\n\n    const credentials = {\n      email: values.email,\n      password: values.password,\n    };\n\n    await dispatch(signUp(credentials));\n    resetForm();}\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: RegisterSchema,\n    onSubmit,\n  });\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n\n\n  return (\n    <>\n      <FormContainer>\n\n        <Formik validationSchema={RegisterSchema} initialValues={formik}>\n          <Forma onSubmit={formik.handleSubmit}>\n            <Title>Register</Title>\n\n            <div>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                onBlur={formik.handleBlur}\n                style={{\n                  border:\n                    ((formik.errors.email &&\n                      '1px solid red'))}}\n\n              />\n              {formik.errors.email && formik.touched.email ? (\n                <ErrBox>{formik.errors.email}</ErrBox>\n              ) : null}\n\n            </div>\n            <div>\n              <Input\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                placeholder=\"Password\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                onBlur={formik.handleBlur}\n              />\n\n              <ShowPassword onClick={showPassword}>\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              {formik.errors.password && formik.touched.password ? (\n                <ErrBox>{formik.errors.password}</ErrBox>\n              ) : null}\n            </div>\n\n            <div>\n              <Input\n                name=\"confirmPassword\"\n                type={showConfirmPass ? 'text' : 'password'}\n                placeholder=\"Confirm Password\"\n                onChange={formik.handleChange}\n                value={formik.values.confirmPassword}\n                onBlur={formik.handleBlur}\n              />\n              <ShowPassword onClick={showConfirmPassword}>\n                {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              {formik.errors.confirmPassword &&\n              formik.touched.confirmPassword ? (\n                <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n              ) : null}\n            </div>\n            <Button type=\"button\" onClick={onSubmit} >\n              Registration\n            </Button>\n            <div><StyledLink href=\"https://google\"> <FcGoogle style={{width: \"2em\", height: \"2em\" }}/> Register with a Google account</StyledLink></div>\n            <div>\n              <span>Already have an account?</span>{' '}\n              <StyledLink to=\"/login\">Login</StyledLink>\n            </div>\n          </Forma>\n        </Formik>\n      </FormContainer>\n    </>\n  );\n};\n","import  { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n    return (\n      <div>\n        <section>\n          <RegisterForm />\n        </section>\n      </div>\n    )\n}\n\nexport default RegisterPage;"],"names":["FormContainer","styled","Title","Forma","Form","ShowPassword","Input","Field","Button","ErrBox","StyledLink","RegisterSchema","object","shape","password","string","min","max","required","confirmPassword","oneOf","ref","email","matches","RegisterForm","useState","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","onSubmit","values","setSubmitting","resetForm","credentials","signUp","formik","useFormik","initialValues","validationSchema","handleSubmit","name","type","placeholder","onChange","handleChange","value","onBlur","handleBlur","style","border","errors","touched","onClick","href","width","height","to"],"sourceRoot":""}