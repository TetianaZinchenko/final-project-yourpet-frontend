{"version":3,"file":"static/js/714.eac129d0.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport {\n  desc1x,\n  desc2x,\n  desc3x,\n  tablet1x,\n  tablet2x,\n  tablet3x,\n  mobile1x,\n  mobile2x,\n  mobile3x,\n} from '../../images/bg_page/index';\n\n\nexport const FormContainer = styled.div`\n  width: 100vw;\n  min-height: calc(100vh - 48px);\n  margin: 0 auto;\n  padding-top: 92px;\n  background-image: url(${mobile1x});\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-position: center top;\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n  @media (min-width: 768px) {\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n    background-image: url(${tablet1x});\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${tablet2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${tablet3x});\n  }\n}\n  @media (min-width: 1280px) {\n    padding-top: 82px;\n    padding-bottom: 147px;\n    background-image: url(${desc1x});\n    @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin-left: 80px;\n\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n    margin-left: 300px;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  fill:white;\n  stroke: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n        ? props.theme.colors.green\n        : props.theme.colors.blue};\n\n  svg {\n    width: inherit;\n    height: inherit;\n\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid;\n    border-color: ${props =>\n  props.error\n    ? props.theme.colors.red\n    : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #f43f5e;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\nexport const AppBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #00c3ad;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ClearInput = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n\n`;\nexport const StyledLink = styled(NavLink)`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  align-items: center;\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport React from 'react';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport icons from '../../icons/icons.svg';\nimport { signIn } from '../../redux/auth/authOperations';\n\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  AppBox,\n  ShowPassword,\n  StyledLink,\n  ClearInput,\n} from './LoginForm.styled';\n\nconst LoginSchema = object().shape({\n  email: string()\n    .required('Email is required')\n    .email('Enter a valid Email')\n    .trim(),\n  password: string()\n    .required('Password is required')\n    .min(6, 'Too short min 6 characters')\n    .max(16, 'Too long max 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/,\n      'Password should be min 6 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .trim(),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPass, setShowPass] = useState(false);\n\n  const formSubmit = async ({ email, password }, { resetForm }) => {\n    await dispatch(signIn({ email, password }));\n    resetForm();\n    // Redirect to '/user' upon successful login\n    navigate('/user');\n  };\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const clearInput = () => {\n    const inputs = document.querySelector('input[type=email]');\n    inputs.value = '';\n  };\n  return (\n    <FormContainer>\n      <Formik\n        validationSchema={LoginSchema}\n        initialValues={{ email: '', password: '' }}\n        onSubmit={formSubmit}\n      >\n        {({ errors, touched }) => (\n          <Forma>\n            <Title>Login</Title>\n            <div>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                placeholder=\"Email\"\n                error={errors.email && touched.email && 'false'}\n                valid={!errors.email && touched.email ? 'true' : undefined}\n              />\n              {touched.email &&\n                (errors.email ? (\n                  <ErrBox>{errors.email}</ErrBox>\n                ) : (\n                  <AppBox>Email is correct</AppBox>\n                ))}\n              <ClearInput>\n                {' '}\n                {touched.email &&\n                  (!errors.email ? (\n                    <svg style={{ fill: 'white', stroke: '#00C3AD' }}>\n                      <use href={icons + '#icon-check'}></use>\n                    </svg>\n                  ) : (\n                    <svg\n                      style={{ fill: 'white', stroke: '#F43F5E' }}\n                      onClick={clearInput}\n                    >\n                      <use href={icons + '#icon-cross-small'}></use>\n                    </svg>\n                  ))}\n              </ClearInput>\n            </div>\n            <div>\n              <Input\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                placeholder=\"Password\"\n                error={errors.password && touched.password && 'false'}\n                valid={\n                  !errors.password && touched.password ? 'true' : undefined\n                }\n              />\n\n              <ShowPassword\n                onClick={showPassword}\n                error={errors.password && touched.password && 'false'}\n                valid={!errors.password && touched.password && '!null'}\n              >\n                {!showPass ? (\n                  <svg>\n                    <use href={icons + '#icon-eye-closed'}></use>\n                  </svg>\n                ) : (\n                  <svg>\n                    <use href={icons + '#icon-eye-open'}></use>\n                  </svg>\n                )}\n              </ShowPassword>\n              {touched.password &&\n                (errors.password ? (\n                  <ErrBox>{errors.password}</ErrBox>\n                ) : (\n                  <AppBox>Password is secure</AppBox>\n                ))}\n            </div>\n\n            <Button type=\"submit\">Login</Button>\n\n            <div>\n              <span>Don't have an account?</span>{' '}\n              <StyledLink to=\"/register\">Register</StyledLink>\n            </div>\n          </Forma>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n","import {LoginForm} from 'components/LoginForm/LoginForm';\nimport {Section} from '../components/Section/Section';\n\nconst  LoginPage = () => {\n  return (\n<Section>\n    <LoginForm />\n</Section>\n  );\n};\nexport default LoginPage;\n\n"],"names":["FormContainer","styled","mobile1x","mobile2x","mobile3x","tablet1x","tablet2x","tablet3x","desc1x","desc2x","desc3x","Title","Forma","Form","ShowPassword","props","error","theme","colors","red","valid","green","blue","Input","Field","Button","ErrBox","AppBox","ClearInput","StyledLink","NavLink","GoogleLink","LoginSchema","object","shape","email","string","required","trim","password","min","max","matches","LoginForm","dispatch","useDispatch","navigate","useNavigate","useState","showPass","setShowPass","formSubmit","resetForm","signIn","showPassword","clearInput","document","querySelector","value","validationSchema","initialValues","onSubmit","errors","touched","name","type","autoComplete","placeholder","undefined","style","fill","stroke","onClick","href","icons","to","Section"],"sourceRoot":""}