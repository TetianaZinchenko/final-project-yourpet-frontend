{"version":3,"file":"static/js/854.3b3119e6.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport {\n  desc1x,\n  desc2x,\n  desc3x,\n  tablet1x,\n  tablet2x,\n  tablet3x,\n  mobile1x,\n  mobile2x,\n  mobile3x,\n} from '../../images/bg_page/index';\n\n\nexport const FormContainer = styled.div`\n  width: 100vw;\n  min-height: calc(100vh - 48px);\n  margin: 0 auto;\n  padding-top: 92px;\n  background-image: url(${mobile1x});\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-position: center top;\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${mobile3x});\n  }\n  @media (min-width: 768px) {\n    padding-top: 92px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n    background-image: url(${tablet1x});\n\n  @media screen and (min-device-pixel-ratio: 2),\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n    background-image: url(${tablet2x});\n  }\n\n  @media screen and (min-device-pixel-ratio: 3),\n  screen and (min-resolution: 288dpi),\n  screen and (min-resolution: 3dppx) {\n    background-image: url(${tablet3x});\n  }\n}\n  @media (min-width: 1280px) {\n    padding-top: 82px;\n    padding-bottom: 147px;\n    background-image: url(${desc1x});\n    @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${desc2x});\n    }\n\n    @media screen and (min-device-pixel-ratio: 3),\n    screen and (min-resolution: 288dpi),\n    screen and (min-resolution: 3dppx) {\n      background-image: url(${desc3x});\n    }\n  }\n\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Forma = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 10px;\n  background-color: #fff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n\n  @media (min-width: 768px) {\n    width: 608px;\n    padding: 60px 0 40px 0;\n    margin-left: 80px;\n\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n    margin-left: 300px;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  fill:white;\n  stroke: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n        ? props.theme.colors.green\n        : props.theme.colors.blue};\n\n  svg {\n    width: inherit;\n    height: inherit;\n\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: white;\n  border: 1px solid;\n    border-color: ${props =>\n  props.error\n    ? props.theme.colors.red\n    : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 50px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #54adff;\n  border: 1px solid #54adff;\n  border-radius: 50px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #f43f5e;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\nexport const AppBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0;\n  left: 15px;\n  color: #00c3ad;\n  font-size: 14px;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ClearInput = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: #54adff;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n\n`;\nexport const StyledLink = styled(NavLink)`\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  align-items: center;\n  color: #54adff;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { object, string, ref } from 'yup';\nimport { FcGoogle } from 'react-icons/fc';\n\nimport { signUp, signIn } from 'redux/auth/authOperations';\n\nimport {\n  Forma,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ShowPassword,\n  StyledLink,\n  GoogleLink,\n  ClearInput,\n  AppBox,\n} from '../LoginForm/LoginForm.styled';\nimport icons from '../../icons/icons.svg';\n\nconst RegisterSchema = object().shape({\n  password: string()\n    .min(6, 'Too short min 6 characters')\n    .max(16, 'Too long max 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/,\n      'Password should be min 6 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .required('Password is required')\n    .trim(),\n  confirmPassword: string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .trim(),\n});\n\nexport const RegisterForm = () => {\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const formSubmit = async ({ email, password }, { resetForm }) => {\n    try {\n      await dispatch(signUp({ email, password }));\n      await dispatch(signIn({ email, password }));\n      resetForm();\n      // Redirect to '/user' upon successful login\n      navigate('/user');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n  const clearInput = () => {\n    const inputs = document.querySelector('input[type=email]');\n    inputs.value = '';\n  };\n\n  return (\n    <>\n      <FormContainer>\n        <Formik\n          validationSchema={RegisterSchema}\n          initialValues={{\n            email: '',\n            password: '',\n            confirmPassword: '',\n          }}\n          onSubmit={formSubmit}\n        >\n          {({ errors, touched }) => (\n            <Forma>\n              <Title>Register</Title>\n              <div>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  error={errors.email && touched.email && 'false'}\n                  valid={!errors.email && touched.email ? 'true' : undefined}\n                />\n                {touched.email &&\n                  (errors.email ? (\n                    <ErrBox>{errors.email}</ErrBox>\n                  ) : (\n                    <AppBox>Email is correct</AppBox>\n                  ))}\n                <ClearInput>\n                  {' '}\n                  {touched.email &&\n                    (!errors.email ? (\n                      <svg style={{ fill: 'white', stroke: '#00C3AD' }}>\n                        <use href={icons + '#icon-check'}></use>\n                      </svg>\n                    ) : (\n                      <svg\n                        style={{ fill: 'white', stroke: '#F43F5E' }}\n                        onClick={clearInput}\n                      >\n                        <use href={icons + '#icon-cross-small'}></use>\n                      </svg>\n                    ))}\n                </ClearInput>\n              </div>\n              <div>\n                <Input\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  error={errors.password && touched.password && 'false'}\n                  valid={\n                    !errors.password && touched.password ? 'true' : undefined\n                  }\n                />\n\n                <ShowPassword\n                  onClick={showPassword}\n                  error={errors.password && touched.password && 'false'}\n                  valid={!errors.password && touched.password && '!null'}\n                >\n                  {!showPass ? (\n                    <svg>\n                      <use href={icons + '#icon-eye-closed'}></use>\n                    </svg>\n                  ) : (\n                    <svg>\n                      <use href={icons + '#icon-eye-open'}></use>\n                    </svg>\n                  )}\n                </ShowPassword>\n                {touched.password &&\n                  (errors.password ? (\n                    <ErrBox>{errors.password}</ErrBox>\n                  ) : (\n                    <AppBox>Password is secure</AppBox>\n                  ))}\n              </div>\n\n              <div>\n                <Input\n                  name=\"confirmPassword\"\n                  type={showConfirmPass ? 'text' : 'password'}\n                  placeholder=\"Confirm Password\"\n                  error={\n                    errors.confirmPassword && touched.confirmPassword && 'false'\n                  }\n                  valid={\n                    !errors.confirmPassword && touched.confirmPassword\n                      ? 'true'\n                      : undefined\n                  }\n                />\n                <ShowPassword\n                  onClick={showConfirmPassword}\n                  error={\n                    errors.confirmPassword && touched.confirmPassword && 'false'\n                  }\n                  valid={\n                    !errors.confirmPassword &&\n                    touched.confirmPassword &&\n                    '!null'\n                  }\n                >\n                  {!showPass ? (\n                    <svg>\n                      <use href={icons + '#icon-eye-closed'}></use>\n                    </svg>\n                  ) : (\n                    <svg>\n                      <use href={icons + '#icon-eye-open'}></use>\n                    </svg>\n                  )}\n                </ShowPassword>\n                {touched.confirmPassword &&\n                  (errors.confirmPassword ? (\n                    <ErrBox>{errors.confirmPassword}</ErrBox>\n                  ) : (\n                    <AppBox>Password is matched</AppBox>\n                  ))}\n              </div>\n              <Button type=\"submit\">Registration</Button>\n              <div>\n                <GoogleLink href=\"https://google\">\n                  {' '}\n                  <FcGoogle style={{ width: '2em', height: '2em' }} /> Register\n                  with a Google account\n                </GoogleLink>\n              </div>\n              <div>\n                <span>Already have an account?</span>{' '}\n                <StyledLink to=\"/login\">Login</StyledLink>\n              </div>\n            </Forma>\n          )}\n        </Formik>\n      </FormContainer>\n    </>\n  );\n};\n","import  { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport {Section} from '../components/Section/Section';\n\nconst RegisterPage = () => {\n    return (\n        <Section>\n          <RegisterForm />\n        </Section>\n    )\n}\n\nexport default RegisterPage;\n"],"names":["FormContainer","styled","mobile1x","mobile2x","mobile3x","tablet1x","tablet2x","tablet3x","desc1x","desc2x","desc3x","Title","Forma","Form","ShowPassword","props","error","theme","colors","red","valid","green","blue","Input","Field","Button","ErrBox","AppBox","ClearInput","StyledLink","NavLink","GoogleLink","RegisterSchema","object","shape","password","string","min","max","matches","required","trim","confirmPassword","oneOf","ref","email","RegisterForm","useState","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","navigate","useNavigate","formSubmit","resetForm","signUp","signIn","console","showPassword","showConfirmPassword","clearInput","document","querySelector","value","validationSchema","initialValues","onSubmit","errors","touched","name","type","placeholder","undefined","style","fill","stroke","onClick","href","icons","width","height","to","Section"],"sourceRoot":""}